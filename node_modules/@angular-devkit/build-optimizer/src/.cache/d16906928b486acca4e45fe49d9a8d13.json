{"remainingRequest":"/home/praveen/Desktop/logo/mt2414ui_admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/praveen/Desktop/logo/mt2414ui_admin/node_modules/@swimlane/ngx-charts/release/common/tooltip/injection-registery.service.js","dependencies":[{"path":"/home/praveen/Desktop/logo/mt2414ui_admin/node_modules/@swimlane/ngx-charts/release/common/tooltip/injection-registery.service.js","mtime":499162500000},{"path":"/home/praveen/Desktop/logo/mt2414ui_admin/node_modules/cache-loader/dist/cjs.js","mtime":1534282358869},{"path":"/home/praveen/Desktop/logo/mt2414ui_admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var InjectionRegistery = /** @class */ /*@__PURE__*/ (function () {\n    function InjectionRegistery(injectionService) {\n        this.injectionService = injectionService;\n        this.defaults = {};\n        this.components = new Map();\n    }\n    InjectionRegistery.prototype.getByType = function (type) {\n        if (type === void 0) {\n            type = this.type;\n        }\n        return this.components.get(type);\n    };\n    InjectionRegistery.prototype.create = function (bindings) {\n        return this.createByType(this.type, bindings);\n    };\n    InjectionRegistery.prototype.createByType = function (type, bindings) {\n        bindings = this.assignDefaults(bindings);\n        var component = this.injectComponent(type, bindings);\n        this.register(type, component);\n        return component;\n    };\n    InjectionRegistery.prototype.destroy = function (instance) {\n        var compsByType = this.components.get(instance.componentType);\n        if (compsByType) {\n            var idx = compsByType.indexOf(instance);\n            if (idx > -1) {\n                var component = compsByType[idx];\n                component.destroy();\n                compsByType.splice(idx, 1);\n            }\n        }\n    };\n    InjectionRegistery.prototype.destroyAll = function () {\n        this.destroyByType(this.type);\n    };\n    InjectionRegistery.prototype.destroyByType = function (type) {\n        var comps = this.components.get(type);\n        if (comps) {\n            for (var _i = 0, comps_1 = comps; _i < comps_1.length; _i++) {\n                var comp = comps_1[_i];\n                this.destroy(comp);\n            }\n        }\n    };\n    InjectionRegistery.prototype.assignDefaults = function (bindings) {\n        var _a = this.defaults, inputs = _a.inputs, outputs = _a.outputs;\n        if (!bindings.inputs && !bindings.outputs) {\n            bindings = { inputs: bindings };\n        }\n        if (inputs) {\n            bindings.inputs = Object.assign(inputs, bindings.inputs);\n        }\n        if (outputs) {\n            bindings.outputs = Object.assign(outputs, bindings.outputs);\n        }\n        return bindings;\n    };\n    InjectionRegistery.prototype.injectComponent = function (type, bindings) {\n        return this.injectionService.appendComponent(type, bindings);\n    };\n    InjectionRegistery.prototype.register = function (type, component) {\n        if (!this.components.has(type)) {\n            this.components.set(type, []);\n        }\n        var types = this.components.get(type);\n        types.push(component);\n    };\n    return InjectionRegistery;\n}());\nexport { InjectionRegistery };\n//# sourceMappingURL=injection-registery.service.js.map\n",null]}